-- CSE 414 	Autumn 2018
-- Homework5 - Q9
-- Name: Jichun Li
-- ID:	1531264

-- For this query you should also measure and report the runtime; it may be 
-- approximate (warning: it might run for a while) . Find all distinct pairs
-- of countries that share both a mountain and a sea.  Your query should return
-- a list of pairs of country names.  Avoid including a country with itself,
-- like in (France,France), and avoid listing both (France,Korea) and 
-- (Korea,France) (not a real answer). Name your output attributes 
-- first_country, second_country.

USE hw5;
SELECT DISTINCT c1.country_name AS first_country,
        c2.country_name AS second_country
FROM country_sm c1, country_sm c2
WHERE c1.country_name <> c2.country_name AND
        c1.sea = c2.sea AND
        c1.mountain = c2.mountain AND
        c1.country_name > c2.country_name;

SELECT DISTINCT u1.country as first_country, u2.country as second_country
FROM 
	(SELECT DISTINCT m.name as mountain, s.name as sea, c.name as country
	FROM world x, x.mondial.mountain m, x.mondial.country c, x.mondial.sea s,
	     split(m.`-country`, ' ') as m_c,
	     split(s.`-country`, ' ') as s_c
	WHERE m_c = c.`-car_code` AND s_c = c.`-car_code`) AS u1,
	(SELECT DISTINCT m.name as mountain, s.name as sea, c.name as country
	FROM world x, x.mondial.mountain m, x.mondial.country c, x.mondial.sea s,
	     split(m.`-country`, ' ') as m_c,
	     split(s.`-country`, ' ') as s_c
	WHERE m_c = c.`-car_code` AND s_c = c.`-car_code`) AS u2
WHERE u1.country < u2.country
AND u1.mountain = u2.mountain
AND u1.sea = u2.sea;
-- 96.447  sec
